---
swagger: '2.0'
info:
  title: BookKeeping API
  description: Use to track your everyday finance.
  version: "0.0.1"
# the domain of the service
host: api.
# array of all schemes that your API supports
schemes:
  - https
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTPS`
# will be prefixed to all paths
basePath: /v0
produces:
  - application/json
paths:
  /records:
    # Inquery all book keeping record
    get:
      security:
       - basicAuth: []
      summary:  Inquery all book keeping record.
      description: |
        This endpoint use to inquery all book keeping record with some filter.
      parameters:
        - name: userId
          in: query
          description: User id to be inquery.
          required: true
          type: string
        - name: startDate
          in: query
          description: Start date of records to be inquery.
          required: false
          type: string
          format: date
        - name: endDate
          in: query
          description: End date of records to be inquery.
          required: false
          type: string
          format: date
        - name: recordType
          in: query
          description: Record type to be inquery.
          required: false
          type: string
        - name: accountId
          in: query
          description: Account of records to be inquery.
          required: false
          type: string
        - name: currencyCode
          in: query
          description: Currency of records to be inquery. "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
          required: false
          type: string
      tags:
        - Inquery
      responses:
        200:
          description: An array of records.
          schema:
            type: array
            items:
              $ref: '#/definitions/BookKeepingRecord'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/{recordId}:
    # Inquery specific book keeping record
    get:
      security:
       - basicAuth: []
      summary:  Inquery specific book keeping record.
      description: |
        This endpoint use to inquery specific book keeping record with record id.
      parameters:
        - name: userId
          in: query
          description: User id to be inquery.
          required: true
          type: string
        - name: recordId
          in: path
          description: Record id to be inquery.
          required: true
          type: string
      tags:
        - Inquery
      responses:
        200:
          description: A record.
          schema:
            $ref: '#/definitions/BookKeepingRecord'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/balances:
    # Inquery specific user's accounts balance at specific date
    get:
      security:
       - basicAuth: []
      summary:  Inquery specific user's accounts balance at specific date
      description: |
        This endpoint use to inquery specific user's accounts balance at specific date.
      parameters:
        - name: userId
          in: query
          description: User id to be inquery.
          required: true
          type: string
        - name: balanceDate
          in: query
          description: Balance date to be inquery.
          required: true
          type: string
          format: date
      tags:
        - Inquery
      responses:
        200:
          description: An array of account balance.
          schema:
            $ref: '#/definitions/AccountBalance'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/expenses:
    # Create new expense record
    post:
      security:
       - basicAuth: []
      summary:  Create new expense record.
      description: |
        This endpoint use to add a new expense reocrd.
      parameters:
        - name: date
          in: query
          description: Date of expense record.
          required: true
          type: string
          format: date
        - name: currencyCode
          in: query
          description: currency of expense
          required: true
          type: string
        - name: amount
          in: query
          description: Amount of expense
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Expenses
      responses:
        200:
          description: Confirmation of record created.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/expenses/{expenseRecordId}:
    # Update specific expense record
    put:
      security:
       - basicAuth: []
      summary:  Update specific expense record.
      description: |
        This endpoint use to update specific expense reocrd.
      parameters:
        - name: expenseRecordId
          in: path
          description: Record id of specific expense record.
          required: true
          type: integer
          format: int32
        - name: currencyCode
          in: query
          description: currency of expense
          required: false
          type: string
        - name: amount
          in: query
          description: Amount of expense
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Expenses
      responses:
        200:
          description: Confirmation of record updated.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    # Delete specific expense record
    delete:
      security:
       - basicAuth: []
      summary:  Delete specific expense record.
      description: |
        This endpoint use to delete specific expense reocrd.
      parameters:
        - name: expenseRecordId
          in: path
          description: Record id of specific expense record.
          required: true
          type: integer
          format: int32
      tags:
        - Expenses
      responses:
        200:
          description: Confirmation of record deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/incomes:
    # Create new income record
    post:
      security:
       - basicAuth: []
      summary:  Create new income record.
      description: |
        This endpoint use to add a new income reocrd.
      parameters:
        - name: date
          in: query
          description: Date of income record.
          required: true
          type: string
          format: date
        - name: currencyCode
          in: query
          description: currency of income
          required: true
          type: string
        - name: amount
          in: query
          description: Amount of income
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Incomes
      responses:
        200:
          description: Confirmation of record created.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/incomes/{incomeRecordId}:
    # Update specific income record
    put:
      security:
       - basicAuth: []
      summary:  Update specific income record.
      description: |
        This endpoint use to update specific income reocrd.
      parameters:
        - name: incomeRecordId
          in: path
          description: Record id of specific income record.
          required: true
          type: integer
          format: int32
        - name: currencyCode
          in: query
          description: currency of income
          required: false
          type: string
        - name: amount
          in: query
          description: Amount of income
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Incomes
      responses:
        200:
          description: Confirmation of record updated.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    # Delete specific income record
    delete:
      security:
       - basicAuth: []
      summary:  Delete specific income record.
      description: |
        This endpoint use to delete specific income reocrd.
      parameters:
        - name: incomeRecordId
          in: path
          description: Record id of specific income record.
          required: true
          type: integer
          format: int32
      tags:
        - Incomes
      responses:
        200:
          description: Confirmation of record deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/transfers:
    # Create new transfer record
    post:
      security:
       - basicAuth: []
      summary:  Create new transfer record.
      description: |
        This endpoint use to add a new transfer reocrd.
      parameters:
        - name: date
          in: query
          description: Date of transfer record.
          required: true
          type: string
          format: date
        - name: currencyCode
          in: query
          description: currency of transfer
          required: true
          type: string
        - name: amount
          in: query
          description: Amount of transfer
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Transfers
      responses:
        200:
          description: Confirmation of record created.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /records/transfers/{transferRecordId}:
    # Update specific transfer record
    put:
      security:
       - basicAuth: []
      summary:  Update specific transfer record.
      description: |
        This endpoint use to update specific transfer reocrd.
      parameters:
        - name: transferRecordId
          in: path
          description: Record id of specific transfer record.
          required: true
          type: integer
          format: int32
        - name: currencyCode
          in: query
          description: currency of transfer
          required: false
          type: string
        - name: amount
          in: query
          description: Amount of transfer
          required: true
          type: number
          format: double
          # TODO: Complete all parameters
      tags:
        - Transfers
      responses:
        200:
          description: Confirmation of record updated.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    # Delete specific transfer record
    delete:
      security:
       - basicAuth: []
      summary:  Delete specific transfer record.
      description: |
        This endpoint use to delete specific transfer reocrd.
      parameters:
        - name: transferRecordId
          in: path
          description: Record id of specific transfer record.
          required: true
          type: integer
          format: int32
      tags:
        - Transfers
      responses:
        200:
          description: Confirmation of record deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /subjects/:
    # Inquery all subjects
    get:
      security:
       - basicAuth: []
      summary:  Inquery all subjects by user id.
      description: |
        This endpoint use to inquery all subjects by user id.
      parameters:
        - name: userId
          in: query
          description: User id to be inquery.
          required: true
          type: string
        - name: subjectStatus
          in: query
          description: subjectStatus to be inquery.
          required: false
          type: string
      tags:
        - Inquery
      responses:
        200:
          description: An array of subjects.
          schema:
            type: array
            items:
              $ref: '#/definitions/Subject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users:
    # Create new user
    post:
      security:
       - basicAuth: []
      summary: Create user
      description: |
        This endpoint use to create new user.
      parameters:
        - name: body
          in: body
          description: User object to be created.
          required: true
          schema:
            $ref: "#/definitions/User"
      tags:
        - user
      responses:
        200:
          description: Confirmation of user created.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{userId}:
    # Update specific user
    put:
      security:
       - basicAuth: []
      summary: Update specific user
      description: |
        This endpoint use to update specific user.
      parameters:
        - name: userId
          in: path
          description: user id that need to be updated
          required: true
          type: string
        - name: body
          in: body
          description: Updated user object
          required: true
          schema:
            $ref: "#/definitions/User"
      tags:
        - user
      responses:
        200:
          description: Confirmation of record created.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    # Delete specific user
    delete:
      security:
       - basicAuth: []
      summary: Delete specific user
      description: |
        This endpoint use to delete specific user.
      parameters:
        - name: userId
          in: path
          description: user id that need to be delete
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: Confirmation of record deleted.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/login:
    # Logs user into the system
    get:
      security:
       - basicAuth: []
      summary: Logs user into the system
      description: |
        This endpoint use to logs user into the system.
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: login successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/logout:
    # Logs out current logged in user session
    get:
      security:
       - basicAuth: []
      summary: Logs out current logged in user session
      description: |
        This endpoint use to logs out current logged in user session.
      parameters:
        - name: username
          in: query
          description: The user name for logout
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: logout successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  BookKeepingRecord:
    type: object
    properties:
      userId:
        type: string
      recordId:
        type: integer
        format: int32
      recordType:
        type: string
      subjectId:
        type: string
      subjectName:
        type: string
      subsubjectId:
        type: string
      subsubjectName:
        type: string
      accountId:
        type: string
      accountName:
        type: string
      receiptNo:
        type: string
      receiptVolumn:
        type: integer
        format: int32
      currencyCode:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      amount:
        type: number
        format: double
      currencyCodeTransferIn:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      amountTransferIn:
        type: number
        format: double
      memo:
        type: string
  AccountBalance:
    type: object
    properties:
      userId:
        type: string
      accountId:
        type: string
      balanceDate:
        type: string
        format: date
      accountCurrency:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      accountBalance:
        type: integer
        format: int32
  Subject:
    type: object
    properties:
      userId:
        type: string
      subjectId:
        type: string
      subjectName:
        type: string
      subjectType:
        type: string
      subjectStatus:
        type: string
      subjectOrder:
        type: integer
        format: int32
      subsubject:
        $ref: '#/definitions/Subsubject'
  Subsubject:
    type: object
    properties:
      subsubjectId:
        type: string
      subsubjectName:
        type: string
      subsubjectStatus:
        type: string
      subsubjectOrder:
        type: integer
        format: int32
  User:
    type: object
    properties:
      userId:
        type: string
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
        format: password
      userStatus:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
